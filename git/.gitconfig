[core]
	editor = vim

[user]
	name = Peter Kubov
	email = peter.kubov@avast.com

[color]
	ui = always
	branch = always
	status = always

[grep]
	linenumber = true

[rerere]
	enabled = true

[diff]
	renames = copies
	tool = vimdiff

[log]
	date = relative

[merge]
	tool = vimdiff
	stat = true
	summary = true
	log = true

[alias]
	# Helper function
	check-arg = !test -z "$1" && ( echo "Provide name of branch" && exit 1) || exit 0 && true

	# add shortcuts
	a = add
	aa = add -A
	ac = !git add $(git lim | uniq)
	ad = !git add $(git lid) # add deleted
	an = !git add $(git lin) # add new
	ap = add -p
	api = ! git ap $(git lim | fzf -m -1 --preview='git diff {}' --preview-window=up:60%)

	# branch shortcuts
	b = branch
	ba = branch -a
	bd = branch -D
	bf = b --format='%(refname:short)'
	br = branch -r

	# blame them
	bl = !git blame `fzf`

	# commit shortcuts
	c = commit
	ca = commit --amend
	ci = commit -m 'Initial commit'
	cm = commit -m
	cv = commit -v

	# clone
	cl = clone
	clr = clone --recursive

	lnparse = !echo "$1" | sed -E 's/^([0-9a-f]+) .*/\\1/' && true
	lnshow = !echo "$1" | xargs git lnparse | xargs git show && true

	# checkout shortcuts
	ch  = checkout
	chb = checkout -b
	chi = !git ch $(git bf $@ | fzf -m --preview-window=up:80% --ansi --preview='git lnd {}') && true
	chic = !git ch $(git log --oneline --decorate | fzf --preview='git lnshow {}' --preview-window=up:60% --ansi | xargs git lnparse)
	chm = checkout master
	chmp = !git checkout master && git pull
	chrm = !git check-arg $1 && git ch "$1" && git r master
	chmy = checkout --ours
	chthy = checkout --theirs
	chmy-all = !git chmy $(git ls-files -m | uniq)
	chthy-all = !git chthy $(git ls-files -m | uniq)

	# clean
	cn = clean
	cnf = clean -f
	cni = clean -i

	# cherry-pick
	cp = cherry-pick
	cpa = check-pick --abort

	# check
	ckw = !git diff-tree --check $(git hash-object -t tree /dev/null) HEAD

	# fetch
	f = fetch
	fu = fetch upstream
	fd = fetch devel

	# init
	i = init

	# shows a nice tree of the whole repository
	l = log
	lp = log -p
	ln = log --oneline --decorate --graph
	lnp = ln -p
	lna = log --oneline --decorate --all --graph
	lnap = lna -p
	lnd = ln --pretty='format:%C(auto)%h %C(magenta)(%ar)%C(auto)%d %Creset%s'

	# merge shortcut
	m = merge
	ma = merge --abort
	mc = merge --continue

	# push
	p = push
	pd = push devel
	po = push origin
	pu = push upstream
	pom = push origin master

	# rebase shortcuts
	r  = rebase
	ra = rebase --abort
	rc = rebase --continue
	ri = rebase -i
	rm = rebase master
	ru = rebase upstream/master
	rom = rebase origin/master
	rim = rebase -i master
	riom = rebase -i origin/master
	rium = rebase -i upstream/master

	# remote
	re = remote
	rea = remote add
	read = remote add devel
	reau = remote add upstream
	reao = remote add origin
	rer = remote remove
	rerd = remote remove devel
	rero = remote remove origin
	reru = remote remove upstream

	# reset shortcuts
	rst = reset
	rsth = reset HEAD~

	# removes new files in repository
	rmn = !git shn | xargs rm

	# status shortcuts
	s = status

	sh = show

	# plumbing wat
	# shm = !git diff-tree --no-commit-id --name-only -r $(test -z "$1" && echo HEAD || echo $1) && true

	# porcelain way
	shm = sh --name-only --oneline

	# lists deleted files in repository
	lid = !git ls-files -d
	# lists new files in repository
	lin = !git ls-files -o --exclude-standard --full-name
	# lists modified files in repository
	lim = !git ls-files -m

	st = stash
	stp = stash pop
	std = stash drop
	stc = stash clear
	stsd = !git st && git std
	stsc = !git st && git stc
